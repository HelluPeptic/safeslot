plugins {
    id 'fabric-loom' version '1.6.9'
    id 'maven-publish'
    id 'idea'
}

repositories {
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://maven.shedaniel.me/" }
    mavenCentral()
    maven { url "https://github.com/Serilum/.maven/raw/maven/" }
    // Added LuckPerms official repository for API resolution
    maven { url 'https://repo.lucko.me/' }
}

dependencies {
    minecraft "com.mojang:minecraft:1.20.1"
    mappings "net.fabricmc:yarn:1.20.1+build.10:v2"
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.92.0+1.20.1"
    modImplementation "net.fabricmc:fabric-loader:0.15.7"
    // Remove individual fabric-api modules to avoid conflicts
    // modImplementation "net.fabricmc.fabric-api:fabric-message-api-v1:0.83.0+1.20.1"

    // Add Sponge Mixin for annotation processing and compile
    implementation "org.spongepowered:mixin:0.8.5"
    annotationProcessor "org.spongepowered:mixin:0.8.5"
    compileOnly "org.spongepowered:mixin:0.8.5"

    implementation "org.jetbrains:annotations:23.0.0"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation 'com.google.code.gson:gson:2.10.1'
    annotationProcessor 'com.google.code.gson:gson:2.10.1'
    compileOnly 'com.google.code.gson:gson:2.10.1'
    implementation 'com.google.guava:guava:32.1.2-jre'
    annotationProcessor 'com.google.guava:guava:32.1.2-jre'
    compileOnly 'com.google.guava:guava:32.1.2-jre'
    api project(":Common")

    modApi("com.terraformersmc:modmenu:7.0.1") { exclude(module: "fabric-api") }

    // Use only the Fabric version of Collective
    modImplementation "com.natamus.collective-ml:collective-fabric:${minecraft_version}-${collective_version}"
    // Use compileOnly instead of deprecated modCompileOnly
    compileOnly "com.natamus.collective-ml:collective:${minecraft_version}-${collective_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-command-api-v2:0.83.0+1.20.1"
    modImplementation "me.lucko:fabric-permissions-api:0.2-SNAPSHOT"
    // LuckPerms API for tablist prefixes
    modImplementation "net.luckperms:api:5.4"
}

loom {
    mixin {
        defaultRefmapName.set("${mod_id}_fabric.refmap.json")
    }

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

version = rootProject.version

processResources {
    from(sourceSets.main.resources) // Ensure Fabric's own resources (including fabric.mod.json) are included
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_name}" }
    }
    // Include Common's compiled classes in the Fabric JAR
    from(project(":Common").sourceSets.main.output)
    // Add Implementation-Version to manifest for dynamic version command
    manifest {
        attributes(
            'Implementation-Version': project.version
        )
    }
    // Do not override defaults; compiled classes and resources are included by default
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

archivesBaseName = 'safeslot-fabric-1.20.1'


